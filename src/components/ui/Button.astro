---
export interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  class?: string;
}

const { href, variant = 'primary', class: className = '' } = Astro.props;

const baseClasses = 'inline-flex items-center justify-center px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-300 transform';

const variants = {
  primary: 'bg-gradient-to-r from-blue-500 to-purple-600 text-white hover:from-blue-600 hover:to-purple-700 shadow-lg hover:shadow-xl',
  secondary: 'bg-gradient-to-r from-gray-700 to-gray-800 text-white hover:from-gray-600 hover:to-gray-700 shadow-lg hover:shadow-xl',
  outline: 'border-2 border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white'
};

const classes = `${baseClasses} ${variants[variant]} ${className}`;
---

{href ? (
  <a href={href} class={classes}>
    <slot />
  </a>
) : (
  <button class={classes}>
    <slot />
  </button>
)}

<style>
  a, button {
    position: relative;
    overflow: hidden;
  }

  a::before, button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
  }

  a:hover::before, button:hover::before {
    left: 100%;
  }
</style>
