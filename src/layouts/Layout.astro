---
export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Portafolio de desarrollador Full-stack especializado en experiencias inmersivas" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <title>{title}</title>
  </head>
  <body>
    <div class="cursor"></div>
    <div class="cursor-follower"></div>
    <slot />
    <script>
      // Cursor personalizado
      const cursor = document.querySelector('.cursor');
      const follower = document.querySelector('.cursor-follower');
      
      document.addEventListener('mousemove', (e) => {
        cursor.style.left = e.clientX + 'px';
        cursor.style.top = e.clientY + 'px';
        
        setTimeout(() => {
          follower.style.left = e.clientX + 'px';
          follower.style.top = e.clientY + 'px';
        }, 100);
      });

      // Scroll suave y animaciones
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('animate-in');
          }
        });
      }, observerOptions);

      document.querySelectorAll('.animate-on-scroll').forEach(el => {
        observer.observe(el);
      });
    </script>
  </body>
</html>

<style is:global>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  html {
    scroll-behavior: smooth;
    font-family: 'Poppins', sans-serif;
  }

  body {
    background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
    color: #ffffff;
    overflow-x: hidden;
    cursor: none;
  }

  /* Cursor personalizado */
  .cursor {
    position: fixed;
    width: 20px;
    height: 20px;
    background: #00d4ff;
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
    mix-blend-mode: difference;
    transition: transform 0.1s ease;
  }

  .cursor-follower {
    position: fixed;
    width: 40px;
    height: 40px;
    border: 2px solid rgba(0, 212, 255, 0.5);
    border-radius: 50%;
    pointer-events: none;
    z-index: 9998;
    transition: all 0.3s ease;
  }

  /* Animaciones base */
  .animate-on-scroll {
    opacity: 0;
    transform: translateY(50px);
    transition: all 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .animate-on-scroll.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* Efectos de hover globales */
  .hover-lift {
    transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .hover-lift:hover {
    transform: translateY(-10px) scale(1.02);
    box-shadow: 0 20px 40px rgba(0, 212, 255, 0.2);
  }

  /* Gradientes animados */
  .gradient-text {
    background: linear-gradient(45deg, #00d4ff, #ff6b6b, #4ecdc4, #45b7d1);
    background-size: 300% 300%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradientShift 4s ease-in-out infinite;
  }

  @keyframes gradientShift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  /* PartÃ­culas flotantes */
  .floating-particles {
    position: absolute;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
  }

  .particle {
    position: absolute;
    background: rgba(0, 212, 255, 0.1);
    border-radius: 50%;
    animation: float 6s ease-in-out infinite;
  }

  .particle:nth-child(1) { width: 4px; height: 4px; left: 10%; animation-delay: 0s; }
  .particle:nth-child(2) { width: 6px; height: 6px; left: 20%; animation-delay: 1s; }
  .particle:nth-child(3) { width: 3px; height: 3px; left: 30%; animation-delay: 2s; }
  .particle:nth-child(4) { width: 5px; height: 5px; left: 40%; animation-delay: 3s; }
  .particle:nth-child(5) { width: 4px; height: 4px; left: 50%; animation-delay: 4s; }
  .particle:nth-child(6) { width: 7px; height: 7px; left: 60%; animation-delay: 5s; }
  .particle:nth-child(7) { width: 3px; height: 3px; left: 70%; animation-delay: 0.5s; }
  .particle:nth-child(8) { width: 5px; height: 5px; left: 80%; animation-delay: 1.5s; }
  .particle:nth-child(9) { width: 4px; height: 4px; left: 90%; animation-delay: 2.5s; }

  @keyframes float {
    0%, 100% {
      transform: translateY(100vh) rotate(0deg);
      opacity: 0;
    }
    10%, 90% {
      opacity: 1;
    }
    50% {
      transform: translateY(-10vh) rotate(180deg);
    }
  }

  /* Morphing shapes */
  .morphing-shape {
    width: 100px;
    height: 100px;
    background: linear-gradient(45deg, #00d4ff, #ff6b6b);
    animation: morph 8s ease-in-out infinite;
  }

  @keyframes morph {
    0%, 100% {
      border-radius: 50% 50% 50% 50%;
      transform: rotate(0deg) scale(1);
    }
    25% {
      border-radius: 60% 40% 30% 70%;
      transform: rotate(90deg) scale(1.1);
    }
    50% {
      border-radius: 30% 60% 70% 40%;
      transform: rotate(180deg) scale(0.9);
    }
    75% {
      border-radius: 40% 30% 60% 50%;
      transform: rotate(270deg) scale(1.05);
    }
  }

  /* Scroll timeline animations (CSS moderno) */
  @supports (animation-timeline: scroll()) {
    .scroll-reveal {
      animation: reveal linear;
      animation-timeline: scroll();
      animation-range: entry 0% cover 40%;
    }

    @keyframes reveal {
      from {
        opacity: 0;
        transform: translateY(100px) scale(0.8);
      }
      to {
        opacity: 1;
        transform: translateY(0) scale(1);
      }
    }
  }

  /* Stagger effects */
  .stagger-container > * {
    animation: slideInStagger 0.6s ease-out forwards;
    opacity: 0;
    transform: translateX(-50px);
  }

  .stagger-container > *:nth-child(1) { animation-delay: 0.1s; }
  .stagger-container > *:nth-child(2) { animation-delay: 0.2s; }
  .stagger-container > *:nth-child(3) { animation-delay: 0.3s; }
  .stagger-container > *:nth-child(4) { animation-delay: 0.4s; }
  .stagger-container > *:nth-child(5) { animation-delay: 0.5s; }
  .stagger-container > *:nth-child(6) { animation-delay: 0.6s; }

  @keyframes slideInStagger {
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  /* 3D transforms */
  .card-3d {
    perspective: 1000px;
    transform-style: preserve-3d;
    transition: all 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  .card-3d:hover {
    transform: rotateY(10deg) rotateX(5deg) translateZ(20px);
  }

  .card-3d-inner {
    transform-style: preserve-3d;
    transition: transform 0.5s;
  }

  .card-3d:hover .card-3d-inner {
    transform: translateZ(30px);
  }

  /* Glitch effect */
  .glitch {
    position: relative;
    animation: glitch 2s infinite;
  }

  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .glitch::before {
    animation: glitch-1 0.5s infinite;
    color: #00d4ff;
    z-index: -1;
  }

  .glitch::after {
    animation: glitch-2 0.5s infinite;
    color: #ff6b6b;
    z-index: -2;
  }

  @keyframes glitch {
    0%, 100% { transform: translate(0); }
    20% { transform: translate(-2px, 2px); }
    40% { transform: translate(-2px, -2px); }
    60% { transform: translate(2px, 2px); }
    80% { transform: translate(2px, -2px); }
  }

  @keyframes glitch-1 {
    0%, 100% { transform: translate(0); }
    20% { transform: translate(2px, -2px); }
    40% { transform: translate(-2px, 2px); }
    60% { transform: translate(-2px, -2px); }
    80% { transform: translate(2px, 2px); }
  }

  @keyframes glitch-2 {
    0%, 100% { transform: translate(0); }
    20% { transform: translate(-2px, -2px); }
    40% { transform: translate(2px, -2px); }
    60% { transform: translate(2px, 2px); }
    80% { transform: translate(-2px, 2px); }
  }
</style>
